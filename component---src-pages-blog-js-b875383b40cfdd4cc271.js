webpackJsonp([0xc19374f83753],{107:function(e,t){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},n=Object.defineProperty,i=Object.getOwnPropertyNames,o=Object.getOwnPropertySymbols,l=Object.getOwnPropertyDescriptor,s=Object.getPrototypeOf,u=s&&s(Object);e.exports=function e(t,c,d){if("string"!=typeof c){if(u){var f=s(c);f&&f!==u&&e(t,f,d)}var p=i(c);o&&(p=p.concat(o(c)));for(var h=0;h<p.length;++h){var y=p[h];if(!(r[y]||a[y]||d&&d[y])){var m=l(c,y);try{n(t,y,m)}catch(e){}}}return t}return t}},186:function(e,t,r){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var l=r(2),s=a(l),u=r(5),c=(a(u),r(88)),d=a(c),f=function(e){function t(){return n(this,t),i(this,e.apply(this,arguments))}return o(t,e),t.prototype.render=function(){var e=r(109);return s.default.createElement("div",{style:{background:"#FEFEFF"}},s.default.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem",display:"flex",flexWrap:"wrap",width:"100%"}},s.default.createElement(d.default,{to:"/"},s.default.createElement("div",null,"Back")),s.default.createElement("div",null,e.map(function(e){return s.default.createElement("div",null,s.default.createElement("h3",{id:e.title.replace(/ /g,"-")},e.title),s.default.createElement("p",{dangerouslySetInnerHTML:{__html:e.body}}))}))))},t}(s.default.Component);t.default=f,e.exports=t.default},109:function(e,t){e.exports=[{title:"Early Thoughts about Elixir",body:"Some background: Most of my development experience is in Node & Ruby. And this is more of a post about the communities values more so than the languages themselves.<br /><br/> Ruby was probably the first programming language I really liked It was pleasant to use, productive and fun. But with rails every now and again I would run into a wall. The magic that some Rails library performed was extremely difficult to configure. I didn't find Ruby source code easy to navigate either -- granted I was a much greener dev back then. <br /> <br /> With Node I found it much easier to read the source. Granted there are so many different styles of JavaScript, and some older libraries can be really difficult to understand. But I loved that there was, generally speaking, very little magic. But I never found it all that productive. <br /> <br /> I had always been intrigued by Erlang and I knew I wanted to learn it but never knew where to start.<br /> <br /> Then came Elixir. A language that is very similiar but much more beginner friendly, and a web framework that curses magic! It was perfect. I was a little bit scared to commit to learning to a very functional programming language (although Erlangists will say it's the most OO language out there!) but I did it anyways -- for knowledge! <br /><br /> I decided to try writing a multiplayer game in Phoenix (<a href='https://meaty-spiffy-hermitcrab.gigalixirapp.com'>Stabby Flies</a>) & the experience was phenomenal. Things just work! And everything is so easy to test. The language is pleasant to use and the conventions for documentation are really... nice! It's an excellent choice for browser game backends and I am excited to see what the future brings. There's still a lot I don't understand & I am still getting used to chopping things up into their own little processes but I really like what I've got so far. Elixir is fun to use, the community is nice, and their values align closely with mine. <br /> <br /> I write this a day after Joe Armstrong, the creator of Erlang, passed away. RIP Joe. Elixir & its community have been heavily influenced by his personality; his humility, appreciation for simplicity, and his ingenuity.  "}]}});
//# sourceMappingURL=component---src-pages-blog-js-b875383b40cfdd4cc271.js.map